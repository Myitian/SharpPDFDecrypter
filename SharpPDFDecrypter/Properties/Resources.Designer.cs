//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpPDFDecrypter.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SharpPDFDecrypter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///                                 Apache License
        ///                           Version 2.0, January 2004
        ///                        http://www.apache.org/licenses/
        ///
        ///   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///   1. Definitions.
        ///
        ///      &quot;License&quot; shall mean the terms and conditions for use, reproduction,
        ///      and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///      &quot;Licensor&quot; shall mean the copyright owner or entity authorized by
        ///      the copyright owner that  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string LICENSE {
            get {
                return ResourceManager.GetString("LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///                                 Apache License
        ///                           Version 2.0, January 2004
        ///                        http://www.apache.org/licenses/
        ///
        ///   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///   1. Definitions.
        ///
        ///      &quot;License&quot; shall mean the terms and conditions for use, reproduction,
        ///      and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///      &quot;Licensor&quot; shall mean the copyright owner or entity authorized by
        ///      the copyright owner that  [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        public static string LICENSE_QPDF {
            get {
                return ResourceManager.GetString("LICENSE_QPDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Apache-2.0 的本地化字符串。
        /// </summary>
        public static string LicenseIdentifier {
            get {
                return ResourceManager.GetString("LicenseIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Apache-2.0 的本地化字符串。
        /// </summary>
        public static string LicenseIdentifier_QPDF {
            get {
                return ResourceManager.GetString("LicenseIdentifier_QPDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 https://github.com/Myitian/SharpPDFDecrypter 的本地化字符串。
        /// </summary>
        public static string ProjectAddress {
            get {
                return ResourceManager.GetString("ProjectAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 https://github.com/qpdf/qpdf 的本地化字符串。
        /// </summary>
        public static string ProjectAddress_QPDF {
            get {
                return ResourceManager.GetString("ProjectAddress_QPDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 {0} v{1}
        ///
        ///项目作者：{2} （{3}）
        ///项目地址：{4}
        ///开源许可证：{5}
        ///
        ///本程序支持移除 PDF 文件中的编辑和打印保护(Owner Password)
        ///和打开口令(User Password)（若文件有打开口令，需要提供打开口令），
        ///不支持破解打开口令(User Password)。
        ///
        ///可将 PDF 文件或包含 PDF 文件夹拖放至主窗口来添加文件，
        ///也可点击“打开文件”或“打开文件夹”来添加文件。
        ///
        ///是否要在浏览器中打开项目地址？ 的本地化字符串。
        /// </summary>
        public static string ProjectInfo {
            get {
                return ResourceManager.GetString("ProjectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 SharpPDFDecrypter 的本地化字符串。
        /// </summary>
        public static string ProjectName {
            get {
                return ResourceManager.GetString("ProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 qpdf 的本地化字符串。
        /// </summary>
        public static string ProjectName_QPDF {
            get {
                return ResourceManager.GetString("ProjectName_QPDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        public static byte[] QPDF_32 {
            get {
                object obj = ResourceManager.GetObject("QPDF_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        public static byte[] QPDF_64 {
            get {
                object obj = ResourceManager.GetObject("QPDF_64", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        public static byte[] Wrapper_32 {
            get {
                object obj = ResourceManager.GetObject("Wrapper_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        public static byte[] Wrapper_64 {
            get {
                object obj = ResourceManager.GetObject("Wrapper_64", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
